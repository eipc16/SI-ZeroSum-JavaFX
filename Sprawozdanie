\documentclass[a4paper,10pt]{article}
%\documentclass[a4paper,10pt]{scrartcl}

\usepackage{titlesec}
\usepackage{polski}
\usepackage[utf8]{inputenc}
\usepackage[document]{ragged2e}
\usepackage{geometry}
\usepackage{listings}
\usepackage{array}
\usepackage{makecell}
\usepackage{float}

\pdfinfo{%
  /Title    (Sprawozdanie nr 3 Algorytmy rozwiązywania gier o sumie zerowej)
  /Author   (Przemysław Pietrzak)
  /Creator  (Przemyslaw Pietrzak)
  /Producer (Przemysław Pietrzak)
  /Subject  (Sztuczna inteligencja)
  /Keywords (minmax, alfa-beta, sztuczna, inteligencja)
}

\lstset{frame=tb,
  language=Java,
  aboveskip=3mm,
  belowskip=3mm,
  showstringspaces=false,
  columns=flexible,
  basicstyle={\small\ttfamily},
  numbers=none,
  breaklines=true,
  breakatwhitespace=true,
  tabsize=3
}

\newcommand{\sectionbreak}{\clearpage}
\begin{document}
    \begin{titlepage}
     \newgeometry{centering, margin=1.5cm}
     \vspace*{\fill}
    
     \vspace*{-4cm}
     \Huge\bfseries\
     {Sztuczna inteligencja i inżynieria wiedzy}
    
     \LARGE
     \centering
     \vspace{2cm}
     {Sprawozdanie nr 3}
    
     \Large
     \centering
     {Algorytmy rozwiązywania gier o sumie zerowej}
     
     \vspace*{0.5cm}
     
     \centering
     \large 
     \vspace{0.5cm}
     Przemysław Pietrzak, 238083
     
     Środa, 17:05
     
     \vspace*{\fill}
     \restoregeometry
    \end{titlepage}
    
    \tableofcontents
    
    \section{Wstęp}
    \justify
    \subsection{Opis implementacji}
    Zaimplementowany program składa się z pięciu głównych części do których należą modele, logika gry, heurystyki wyboru wartości, algorytmy oraz interfejs użytkownika. Modele przedstawiają widok planszy oraz zawierają informacje o znajdujących się w niej polach i możliwych do zdobycia młynkach. Silnik gry następnie wykorzystuje zaimportowany model podczas właściwej rozgrywki do weryfikowania ruchów gracza oraz dokonywania ewaluacji stanu gry. Stany gry są ewaluowane na podstawie heurystyki wartości przypisanej do obecnie aktywnego gracza. Wybrane algorytmy natomiast poprzez wykorzystanie odpowiedniego interfejsu z silnika gry podejmują decyzję o następnym ruchu, a następnie wysyłają tą informację do silnika w celu wykonania ruchu. Interfejs użytkownika został napisany przy pomocy biblioteki JavaFX. Jego zadaniem jest udostępnienie użytkownikowi możliwości zmiany dostępnych opcji jak wybór algorytmu przypisanego do danego gracza i wybór heurystyk poprzez odpowiednie kontrolki
    
    \justify
    \subsection{Opis algorytmów}
    Badane w następnych etapach algorytmy to min-max oraz alfa-beta. Oba algorytmy są metodami minimalizowania maksymalnych możliwych strat. Drugi z podanych algorytmów jest rozszerzeniem pierwszego, które redukuje liczbę przeszukiwanych węzłów koniecznych do odwiedzienia. Pseudokod obu rozwiązań znajduje się poniżej.
    
    \begin{lstlisting}[escapeinside={(*}{*)}]
    // Algorytm min-max
    function getbestmove()
        for move in possible_moves
            result = minmax(move, max_depth, true)
            if result > best_result
                best_result = result
                best_move = move
        return move
        
    function minmax(move, depth, maximize)
        make_move(move)
        
        if depth < 1
            return evaluate()
        if game_finished
            if draw
                return 0
            return winner ? (*$\infty$*) : -(*$\infty$*)
            
        for next_move in possible_moves
            result = minmax(next_move, depth - 1, !maximize)
            if(maximize)
                best = max(best, result)
            else
                best = min(best, result)
        return best
    \end{lstlisting}
    \newpage
    \begin{lstlisting}[escapeinside={(*}{*)}]
    // Algorytm alfa-beta
    function getbestmove()
        alfa = -(*$\infty$*), beta = (*$\infty$*)
        for move in possible_moves
            alpha = minmax(move, max_depth, true, alfa, beta)
            if alpha > best_result
                best_result = alpha
                best_move = move
        return move
        
    function alfabeta(move, depth, maximize, alfa, beta)
        make_move(move)
        if depth < 1
            return evaluate()
        if game_finished
            if draw
                return 0
            return winner ? (*$\infty$*) : -(*$\infty$*)
        for next_move in possible_moves
            result = alfabeta(next_move, depth - 1, !maximize, alfa, beta)
            if(maximize)
                if(result > best)
                    best, alpha = result
            else
                if(result < best)
                    best, beta = result
            if(alpha >= beta)
                return best
        return best
    \end{lstlisting}
    
    \justify
    \section{Badanie wpływu algorytmu na czas przetwarzania i liczbę instrukcji}
    Badanie polega na zmierzeniu czasu rozgrywki oraz liczbę potrzebnych ruchów do uzyskania zwycięstwa dla obu z wykonywanych algorytmów. Badanie przeprowadzone zostało na różnych maksymalnych głębokościach zarówno dla algorytmu Min-Max jak i algorytmu Alfa-Beta. W każdym z badań wykorzystano heurystykę oceny ruchu na podstawie sumy różnicy liczby znajdujących się na planszy pionków oraz różnicy liczby dostępnych ruchów. Wyniki badań przedstawiono w poniższych tabelach.
    
    \begin{table}[H]
    \caption{Wpływ głębokości na działanie algorytmu Min-Max}
    \label{minmax_depth}
    \begin{center}
    \begin{tabular}{|c|c|c|c|} 
    \hline
    \thead{Głębokość} & \thead{Czas \\ przetwarzania [s]} & \thead{Liczba ruchów  \\ wygranego} & \thead{Liczba instrukcji \\\ wygranego} \\
    \hline
     \makecell{1} & \makecell{}cell5 & \makecell{}celfflf6 & \makecell{}celfflf6 \\
    \hline
    {2} & \makecell{}cell8 & \makecell{}cell9 & \makecell{}cell10 \\ 
    \hline
    {3} & \makecell{}cell8 & \makecell{}cell9 & \makecell{}cell10 \\ 
    \hline
    {4} & \makecell{}cell8 & \makecell{}cell9 & \makecell{}cell10 \\ 
    \hline
    {5} & \makecell{}cell8 & \makecell{}cell9 & \makecell{}cell10 \\ 
    \hline
    {6} & \makecell{}cell8 & \makecell{}cell9 & \makecell{}cell10 \\ 
    \hline
    \end{tabular}
    \end{center}
     \end{table}
     
         \begin{table}[H]
    \caption{Wpływ głębokości na działanie algorytmu Alfa-Beta}
    \label{minmax_depth}
    \begin{center}
    \begin{tabular}{|c|c|c|c|} 
    \hline
    \thead{Głębokość} & \thead{Czas \\ przetwarzania [s]} & \thead{Liczba ruchów  \\ wygranego} & \thead{Liczba instrukcji \\\ wygranego} \\
    \hline
     \makecell{1} & \makecell{}cell5 & \makecell{}celfflf6 & \makecell{}celfflf6 \\
    \hline
    {2} & \makecell{}cell8 & \makecell{}cell9 & \makecell{}cell10 \\ 
    \hline
    {3} & \makecell{}cell8 & \makecell{}cell9 & \makecell{}cell10 \\ 
    \hline
    {4} & \makecell{}cell8 & \makecell{}cell9 & \makecell{}cell10 \\ 
    \hline
    {5} & \makecell{}cell8 & \makecell{}cell9 & \makecell{}cell10 \\ 
    \hline
    {6} & \makecell{}cell8 & \makecell{}cell9 & \makecell{}cell10 \\ 
    \hline
    \end{tabular}
    \end{center}
     \end{table}

    
    \section{Badanie wpływu heurystyki na czas przetwarzania i liczbę instrukcji}
    placeHolder
    
    \section{Podsumowanie}
    
\end{document}
